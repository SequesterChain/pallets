//! Autogenerated weights for pallet_donations
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2022-06-21, STEPS: `20`, REPEAT: 10, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 1024

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain
// dev
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet_donations
// --extrinsic
// *
// --steps
// 20
// --repeat
// 10
// --json
// --template
// ./.maintain/frame-weight-template.hbs
// --output
// /Users/bedelson/dev/pallets/donations/src/weights.rs

#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{
    traits::Get,
    weights::{constants::RocksDbWeight, Weight},
};
use sp_std::marker::PhantomData;

/// Weight functions needed for pallet_donations.
pub trait WeightInfo {
    fn submit_unsigned() -> Weight;
    fn xcm_transfer_to_sequester() -> Weight;
    fn spend_funds() -> Weight;
}

/// Weights for pallet_donations using the Substrate node and recommended hardware.
pub struct SubstrateWeight<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for SubstrateWeight<T> {
    fn submit_unsigned() -> Weight {
        (9_477_000 as Weight)
            .saturating_add(T::DbWeight::get().reads(1 as Weight))
            .saturating_add(T::DbWeight::get().writes(2 as Weight))
    }
    fn xcm_transfer_to_sequester() -> Weight {
        (10_722_000 as Weight)
    }
    fn spend_funds() -> Weight {
        (6_077_000 as Weight) // Standard Error: 1_000
            .saturating_add(T::DbWeight::get().reads(1 as Weight))
    }
}

// For backwards compatibility and tests
impl WeightInfo for () {
    fn submit_unsigned() -> Weight {
        (9_477_000 as Weight)
            .saturating_add(RocksDbWeight::get().reads(1 as Weight))
            .saturating_add(RocksDbWeight::get().writes(2 as Weight))
    }
    fn xcm_transfer_to_sequester() -> Weight {
        (10_722_000 as Weight)
    }
    fn spend_funds() -> Weight {
        (6_077_000 as Weight) // Standard Error: 1_000
            .saturating_add(RocksDbWeight::get().reads(1 as Weight))
    }
}
